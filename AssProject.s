	PRESERVE8
	THUMB
	AREA RESET, DATA, READONLY

    EXPORT __Vectors

__Vectors 
	DCD 0x20001000
	DCD Reset_Handler
	ALIGN
	
ARR RN R0	;GIVING NAMES FOR THE REGISTERS
COUNT RN R1
SUMALL RN R2
EVEN_C RN R3
DIV RN R4
ELEMENT RN R9


	AREA MYRAM, DATA, READWRITE

SUM  DCD 0 ;INITIALLING VALUES ANT IT'S SPACE AND CELLS IN THE MEMORY
EVEN DCD 0
DIVISORS_ARR SPACE 10

	AREA MYCODE, CODE, READONLY
	ENTRY
	EXPORT Reset_Handler
	
EVEN_PROCEDURE  ;THIS FUNCTION IS TO CHECK IF EVEN AND ADD IT
	TST ELEMENT, #1 ;  AND with 1, will zero out all bits but the rightmost one, IF THE RESULT IS 1 THEN ODD IF 0 THEN EVEN
	BNE FINAL ;IF ODD END FUNCTION
	ADD EVEN_C, EVEN_C, ELEMENT ;IF EVEN SUM = SUM + ELEMENT
FINAL BX LR	

POW2 ;THIS FUNCTION IS TO KNOW THE BIGGIST DIVISOR
	MOV DIV, #1 ;INITIAL IT TO 2 WHICH IS 2^0 
	MOV R8, ELEMENT ;COPY THE ELEMENT ELSE WHERE
Loop LSRS R8, R8, #1 ;SHIFT RIGHT ONE BIT AND THE BIT WILL BE IN THE CARRY
	 BCS final ;IF CARRY = 1 THEN END THE FUNCTION
	 ADD DIV, DIV, DIV ;IF NOT, THEN MULTIPLY PY 2, BUT IT'S FASTER USING ADD
	 BCC Loop ;CHECK AGAIN
final BX LR	

Reset_Handler
	LDR R0,=Array ;GET THE ARRAY FIRST COMPONENT'S ADDRESS
	LDR R10, =SUM ;GETTING ADDRESS IN MEMORY
	LDR R11, =EVEN ;GETTING ADDRESS IN MEMORY
	LDR R12, =DIVISORS_ARR ;GETTING ADDRESS IN MEMORY
	MOV EVEN_C, #0 ;INITIALIZE VALUE
	MOV COUNT, #COUNTER ;INITIALIZE VALUE
	MOV SUMALL,#0 ;INITIALIZE VALUE
	MOV DIV, #1 ;INITIALIZE VALUE

loop LDRB ELEMENT, [ARR] ;GETTING ELEMENT, ELEMENT IN ARRAY
	 ;SECTION D-----------------------------
	 BL POW2 ;GET THE DIVISOR
	 STR R4, [R12] ;STORE IT IN THE MEMORY
	 ADD R12, R12, #1 ;GET TO THE NEXT SPACE IN MEMORY TO PUT VALUE IN IT (ARRAY OF DIV)
	 ;SECTION C-----------------------------
	 BL EVEN_PROCEDURE ;GET IF EVEN AND ADD IF IT IS
	 ;SECTION B-----------------------------
	 ADD ARR, ARR, #1 ;GET TO THE NEXT INDEX IN THE ARRAY (NEXT MEMORY CELL)
	 ADD SUMALL, SUMALL, ELEMENT ;COUNT ALL ELEMENTS
	 SUBS COUNT, COUNT, #1 ;DECREMENT
	 BNE loop ;DO AGAIN IN COUNT !=0 

	STR SUMALL, [R10] ;STORE SUM OF ALL IN MEMORY
	STR EVEN_C, [R11] ;STORE SUM OF EVEN IN MEMORY
Stop B Stop

Array DCB 34, 56, 27, 156, 200, 68, 128,235, 17, 45
COUNTER EQU 10 ;initialize it as the array index or space (if changed, add or remove values from Array, and change the space of array of div)
	
	 END